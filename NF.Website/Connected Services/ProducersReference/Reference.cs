//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NF.Website.ProducersReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProducerDto", Namespace="http://schemas.datacontract.org/2004/07/NF.ApplicationServices.DTOs")]
    [System.SerializableAttribute()]
    public partial class ProducerDto : NF.Website.ProducersReference.BaseDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProducerInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProducerInfo {
            get {
                return this.ProducerInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProducerInfoField, value) != true)) {
                    this.ProducerInfoField = value;
                    this.RaisePropertyChanged("ProducerInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseDto", Namespace="http://schemas.datacontract.org/2004/07/NF.ApplicationServices.DTOs")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NF.Website.ProducersReference.ProducerDto))]
    public partial class BaseDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProducersReference.IProducers")]
    public interface IProducers {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProducers/GetProducers", ReplyAction="http://tempuri.org/IProducers/GetProducersResponse")]
        NF.Website.ProducersReference.ProducerDto[] GetProducers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProducers/GetProducers", ReplyAction="http://tempuri.org/IProducers/GetProducersResponse")]
        System.Threading.Tasks.Task<NF.Website.ProducersReference.ProducerDto[]> GetProducersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProducers/GetProducersByName", ReplyAction="http://tempuri.org/IProducers/GetProducersByNameResponse")]
        NF.Website.ProducersReference.ProducerDto[] GetProducersByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProducers/GetProducersByName", ReplyAction="http://tempuri.org/IProducers/GetProducersByNameResponse")]
        System.Threading.Tasks.Task<NF.Website.ProducersReference.ProducerDto[]> GetProducersByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProducers/GetProducerById", ReplyAction="http://tempuri.org/IProducers/GetProducerByIdResponse")]
        NF.Website.ProducersReference.ProducerDto GetProducerById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProducers/GetProducerById", ReplyAction="http://tempuri.org/IProducers/GetProducerByIdResponse")]
        System.Threading.Tasks.Task<NF.Website.ProducersReference.ProducerDto> GetProducerByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProducers/PostProducer", ReplyAction="http://tempuri.org/IProducers/PostProducerResponse")]
        string PostProducer(NF.Website.ProducersReference.ProducerDto producerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProducers/PostProducer", ReplyAction="http://tempuri.org/IProducers/PostProducerResponse")]
        System.Threading.Tasks.Task<string> PostProducerAsync(NF.Website.ProducersReference.ProducerDto producerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProducers/PutProducer", ReplyAction="http://tempuri.org/IProducers/PutProducerResponse")]
        string PutProducer(NF.Website.ProducersReference.ProducerDto producerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProducers/PutProducer", ReplyAction="http://tempuri.org/IProducers/PutProducerResponse")]
        System.Threading.Tasks.Task<string> PutProducerAsync(NF.Website.ProducersReference.ProducerDto producerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProducers/DeleteProducer", ReplyAction="http://tempuri.org/IProducers/DeleteProducerResponse")]
        string DeleteProducer(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProducers/DeleteProducer", ReplyAction="http://tempuri.org/IProducers/DeleteProducerResponse")]
        System.Threading.Tasks.Task<string> DeleteProducerAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProducersChannel : NF.Website.ProducersReference.IProducers, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProducersClient : System.ServiceModel.ClientBase<NF.Website.ProducersReference.IProducers>, NF.Website.ProducersReference.IProducers {
        
        public ProducersClient() {
        }
        
        public ProducersClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProducersClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProducersClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProducersClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NF.Website.ProducersReference.ProducerDto[] GetProducers() {
            return base.Channel.GetProducers();
        }
        
        public System.Threading.Tasks.Task<NF.Website.ProducersReference.ProducerDto[]> GetProducersAsync() {
            return base.Channel.GetProducersAsync();
        }
        
        public NF.Website.ProducersReference.ProducerDto[] GetProducersByName(string name) {
            return base.Channel.GetProducersByName(name);
        }
        
        public System.Threading.Tasks.Task<NF.Website.ProducersReference.ProducerDto[]> GetProducersByNameAsync(string name) {
            return base.Channel.GetProducersByNameAsync(name);
        }
        
        public NF.Website.ProducersReference.ProducerDto GetProducerById(int id) {
            return base.Channel.GetProducerById(id);
        }
        
        public System.Threading.Tasks.Task<NF.Website.ProducersReference.ProducerDto> GetProducerByIdAsync(int id) {
            return base.Channel.GetProducerByIdAsync(id);
        }
        
        public string PostProducer(NF.Website.ProducersReference.ProducerDto producerDto) {
            return base.Channel.PostProducer(producerDto);
        }
        
        public System.Threading.Tasks.Task<string> PostProducerAsync(NF.Website.ProducersReference.ProducerDto producerDto) {
            return base.Channel.PostProducerAsync(producerDto);
        }
        
        public string PutProducer(NF.Website.ProducersReference.ProducerDto producerDto) {
            return base.Channel.PutProducer(producerDto);
        }
        
        public System.Threading.Tasks.Task<string> PutProducerAsync(NF.Website.ProducersReference.ProducerDto producerDto) {
            return base.Channel.PutProducerAsync(producerDto);
        }
        
        public string DeleteProducer(int id) {
            return base.Channel.DeleteProducer(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteProducerAsync(int id) {
            return base.Channel.DeleteProducerAsync(id);
        }
    }
}
