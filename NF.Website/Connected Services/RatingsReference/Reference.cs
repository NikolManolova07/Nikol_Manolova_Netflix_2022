//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NF.Website.RatingsReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RatingDto", Namespace="http://schemas.datacontract.org/2004/07/NF.ApplicationServices.DTOs")]
    [System.SerializableAttribute()]
    public partial class RatingDto : NF.Website.RatingsReference.BaseDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseDto", Namespace="http://schemas.datacontract.org/2004/07/NF.ApplicationServices.DTOs")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NF.Website.RatingsReference.RatingDto))]
    public partial class BaseDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RatingsReference.IRatings")]
    public interface IRatings {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRatings/GetRatings", ReplyAction="http://tempuri.org/IRatings/GetRatingsResponse")]
        NF.Website.RatingsReference.RatingDto[] GetRatings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRatings/GetRatings", ReplyAction="http://tempuri.org/IRatings/GetRatingsResponse")]
        System.Threading.Tasks.Task<NF.Website.RatingsReference.RatingDto[]> GetRatingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRatings/GetRatingsByName", ReplyAction="http://tempuri.org/IRatings/GetRatingsByNameResponse")]
        NF.Website.RatingsReference.RatingDto[] GetRatingsByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRatings/GetRatingsByName", ReplyAction="http://tempuri.org/IRatings/GetRatingsByNameResponse")]
        System.Threading.Tasks.Task<NF.Website.RatingsReference.RatingDto[]> GetRatingsByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRatings/GetRatingById", ReplyAction="http://tempuri.org/IRatings/GetRatingByIdResponse")]
        NF.Website.RatingsReference.RatingDto GetRatingById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRatings/GetRatingById", ReplyAction="http://tempuri.org/IRatings/GetRatingByIdResponse")]
        System.Threading.Tasks.Task<NF.Website.RatingsReference.RatingDto> GetRatingByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRatings/PostRating", ReplyAction="http://tempuri.org/IRatings/PostRatingResponse")]
        string PostRating(NF.Website.RatingsReference.RatingDto ratingDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRatings/PostRating", ReplyAction="http://tempuri.org/IRatings/PostRatingResponse")]
        System.Threading.Tasks.Task<string> PostRatingAsync(NF.Website.RatingsReference.RatingDto ratingDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRatings/PutRating", ReplyAction="http://tempuri.org/IRatings/PutRatingResponse")]
        string PutRating(NF.Website.RatingsReference.RatingDto ratingDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRatings/PutRating", ReplyAction="http://tempuri.org/IRatings/PutRatingResponse")]
        System.Threading.Tasks.Task<string> PutRatingAsync(NF.Website.RatingsReference.RatingDto ratingDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRatings/DeleteRating", ReplyAction="http://tempuri.org/IRatings/DeleteRatingResponse")]
        string DeleteRating(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRatings/DeleteRating", ReplyAction="http://tempuri.org/IRatings/DeleteRatingResponse")]
        System.Threading.Tasks.Task<string> DeleteRatingAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRatingsChannel : NF.Website.RatingsReference.IRatings, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RatingsClient : System.ServiceModel.ClientBase<NF.Website.RatingsReference.IRatings>, NF.Website.RatingsReference.IRatings {
        
        public RatingsClient() {
        }
        
        public RatingsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RatingsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RatingsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RatingsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public NF.Website.RatingsReference.RatingDto[] GetRatings() {
            return base.Channel.GetRatings();
        }
        
        public System.Threading.Tasks.Task<NF.Website.RatingsReference.RatingDto[]> GetRatingsAsync() {
            return base.Channel.GetRatingsAsync();
        }
        
        public NF.Website.RatingsReference.RatingDto[] GetRatingsByName(string name) {
            return base.Channel.GetRatingsByName(name);
        }
        
        public System.Threading.Tasks.Task<NF.Website.RatingsReference.RatingDto[]> GetRatingsByNameAsync(string name) {
            return base.Channel.GetRatingsByNameAsync(name);
        }
        
        public NF.Website.RatingsReference.RatingDto GetRatingById(int id) {
            return base.Channel.GetRatingById(id);
        }
        
        public System.Threading.Tasks.Task<NF.Website.RatingsReference.RatingDto> GetRatingByIdAsync(int id) {
            return base.Channel.GetRatingByIdAsync(id);
        }
        
        public string PostRating(NF.Website.RatingsReference.RatingDto ratingDto) {
            return base.Channel.PostRating(ratingDto);
        }
        
        public System.Threading.Tasks.Task<string> PostRatingAsync(NF.Website.RatingsReference.RatingDto ratingDto) {
            return base.Channel.PostRatingAsync(ratingDto);
        }
        
        public string PutRating(NF.Website.RatingsReference.RatingDto ratingDto) {
            return base.Channel.PutRating(ratingDto);
        }
        
        public System.Threading.Tasks.Task<string> PutRatingAsync(NF.Website.RatingsReference.RatingDto ratingDto) {
            return base.Channel.PutRatingAsync(ratingDto);
        }
        
        public string DeleteRating(int id) {
            return base.Channel.DeleteRating(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteRatingAsync(int id) {
            return base.Channel.DeleteRatingAsync(id);
        }
    }
}
